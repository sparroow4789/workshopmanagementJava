/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialog;

import db.Database;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import workshoppackage.OpenedJobCard;

/**
 *
 * @author Amazoft
 */
public class AddItemQtyByClickingDialog extends javax.swing.JDialog {
    
    private String jobitemid, itemid, nowqty, pricebatchid;

    /**
     * Creates new form AddItemQtyByClickingDialog
     */
    public AddItemQtyByClickingDialog(java.awt.Frame parent, boolean modal, String jobitemid, String itemid, String nowqty, String pricebatchid) {
        super(parent, modal);
        this.jobitemid = jobitemid;
        this.itemid = itemid;
        this.nowqty = nowqty;
        this.pricebatchid = pricebatchid;
        initComponents();
        
        QtyValue.setText(nowqty);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        QtyValue = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Change Quantity");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(84, 84, 84))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Quantity");

        QtyValue.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        QtyValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        AddBtn.setBackground(new java.awt.Color(255, 255, 255));
        AddBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        AddBtn.setForeground(new java.awt.Color(0, 51, 102));
        AddBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add.png"))); // NOI18N
        AddBtn.setText("Add");
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(QtyValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QtyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddBtn)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked

        //Normal price
        if(pricebatchid.equals("0")){
 
            ResultSet inum = Database.getData("SELECT quantity FROM tbl_item WHERE item_id = "+itemid+" ");   
            try {
                if(inum.first()){
                    
                    String dbqty = inum.getString(1);
                    
                    Double TotQty = Double.valueOf(dbqty) + Double.valueOf(nowqty);
                    
//                    System.out.println("Data Base - "+dbqty);
//                    System.out.println("Job Item Id - "+jobitemid);
//                    System.out.println("Cal - "+TotQty);
//                    System.out.println("need to update - "+Double.valueOf(QtyValue.getText()) );
                    
                    if(TotQty >= Double.valueOf(QtyValue.getText())){
                        
                        //Only Need To Insert Data //
                        
                        if(Database.saveData("UPDATE tbl_item SET quantity= quantity + "+nowqty+" WHERE item_id = "+itemid +" ")){
//                            JOptionPane.showMessageDialog(rootPane, "Successfully item added.");
                            System.out.println("Successfully update FRU.");
                            
                            
                            ResultSet giq = Database.getData("SELECT quantity FROM tbl_item WHERE item_id = "+itemid+" ");   
                            try {
                                if(giq.first()){
                                    
                                    Double cqty = giq.getDouble(1);
                                    
                                    if(cqty >= Double.valueOf(QtyValue.getText())){
                                        
                                        
                                        if(Database.saveData("UPDATE tbl_job_item SET qty= "+Double.valueOf(QtyValue.getText())+" WHERE job_item_id = "+jobitemid+" ")){
//                                            JOptionPane.showMessageDialog(rootPane, "Successfully update FRU.");
                                            System.out.println("Successfully update FRU.");
                                            
                                            
                                            if(Database.saveData("UPDATE tbl_item SET quantity= quantity - "+Double.valueOf(QtyValue.getText())+" WHERE item_id = "+itemid+" ")){
                                                JOptionPane.showMessageDialog(rootPane, "Successfully item added.");
                                                System.out.println("Successfully item added.");

                                                OpenedJobCard.LoadJobItemData();
                                                this.dispose();

                                            }else{
                                                JOptionPane.showMessageDialog(rootPane, "Error, Something went wrong CODE SNAKE");
                                                System.out.println("Error, Something went wrong 991");
                                            }
                                            

                                        }else{
                                            JOptionPane.showMessageDialog(rootPane, "Error, Something went wrong CODE SPRITE");
                                            System.out.println("Error, Something went wrong 888");
                                        }
                                        
                                        
                                    }else{
                                        JOptionPane.showMessageDialog(rootPane, "Error, Not enough stock.");
                                        System.out.println("Error, Not enough stock");
                                    }
                                    
                                    
                                    
                                    
                                }
                            }catch(SQLException e){
                                e.printStackTrace();
                            }
                            
                            
                            
                            
                            
                            

//                            OpenedJobCard.LoadJobItemData();
//                            this.dispose();

                        }else{
                            JOptionPane.showMessageDialog(rootPane, "Error, Something went wrong CODE COKE.");
                            System.out.println("Error, Something went wrong 111");
                        }
                        
                        
                        
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Not enough stock, Please add stock first.");
                    }
                    
                    
                    
                    
                }
            }catch (SQLException ex) {
                ex.printStackTrace();
            }
           
            
            
            
        //With Price Batch
        }else{
            
            
            ResultSet inum = Database.getData("SELECT qty FROM tbl_item_price_batch WHERE item_id = "+itemid+" AND price_batch_id = "+pricebatchid+" ");   
            try {
                if(inum.first()){
                    
                    String dbqty = inum.getString(1);
                    
                    Double TotQty = Double.valueOf(dbqty) + Double.valueOf(nowqty);
                    
//                    System.out.println("Data Base - "+dbqty);
//                    System.out.println("Job Item Id - "+jobitemid);
//                    System.out.println("Cal - "+TotQty);
//                    System.out.println("need to update - "+Double.valueOf(QtyValue.getText()) );
                    
                    if(TotQty >= Double.valueOf(QtyValue.getText())){
                       
                        
                        if(Database.saveData("UPDATE tbl_item_price_batch SET qty= qty + "+nowqty+" WHERE item_id = "+itemid+" AND price_batch_id = "+pricebatchid+" ")){
//                            JOptionPane.showMessageDialog(rootPane, "Successfully item added.");
                            System.out.println("Successfully update FRU.");
                            
                            
                            ResultSet giq = Database.getData("SELECT qty FROM tbl_item_price_batch WHERE item_id = "+itemid+" AND price_batch_id = "+pricebatchid+" ");   
                            try {
                                if(giq.first()){
                                    
                                    Double cqty = giq.getDouble(1);
                                    
                                    if(cqty >= Double.valueOf(QtyValue.getText())){
                                        
                                        
                                        if(Database.saveData("UPDATE tbl_job_item SET qty= "+Double.valueOf(QtyValue.getText())+" WHERE job_item_id = "+jobitemid+" ")){
//                                            JOptionPane.showMessageDialog(rootPane, "Successfully update FRU.");
                                            System.out.println("Successfully update FRU.");
                                            
                                            
                                            if(Database.saveData("UPDATE tbl_item_price_batch SET qty= qty - "+Double.valueOf(QtyValue.getText())+" WHERE item_id = "+itemid+" AND price_batch_id = "+pricebatchid+" ")){
                                                JOptionPane.showMessageDialog(rootPane, "Successfully item added.");
                                                System.out.println("Successfully item added.");

                                                OpenedJobCard.LoadJobItemData();
                                                this.dispose();

                                            }else{
                                                JOptionPane.showMessageDialog(rootPane, "Error, Something went wrong CODE SNAKE");
                                                System.out.println("Error, Something went wrong 991");
                                            }
                                            

                                        }else{
                                            JOptionPane.showMessageDialog(rootPane, "Error, Something went wrong CODE SPRITE");
                                            System.out.println("Error, Something went wrong 888");
                                        }
                                        
                                        
                                    }else{
                                        JOptionPane.showMessageDialog(rootPane, "Error, Not enough stock.");
                                        System.out.println("Error, Not enough stock");
                                    }
                                    
                                    
                                    
                                    
                                }
                            }catch(SQLException e){
                                e.printStackTrace();
                            }
                            
                            
                            
                            
                            
                            

//                            OpenedJobCard.LoadJobItemData();
//                            this.dispose();

                        }else{
                            JOptionPane.showMessageDialog(rootPane, "Error, Something went wrong CODE COKE.");
                            System.out.println("Error, Something went wrong 111");
                        }
                        
                        
                        
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Not enough stock, Please add stock first.");
                    }
                    
                    
                    
                    
                }
            }catch (SQLException ex) {
                ex.printStackTrace();
            }
            
            
            
        }
        
        
        
        
//        if(Database.saveData("UPDATE tbl_job_labour SET job_fru='"+QtyValue.getText()+"' WHERE job_labour_id = "+labourid+" ")){
//            JOptionPane.showMessageDialog(rootPane, "Successfully update FRU.");
//            System.out.println("Successfully update FRU.");
//
//            OpenedJobCard.LoadJobItemData();
//            this.dispose();
//
//        }else{
//            JOptionPane.showMessageDialog(rootPane, "Failed.");
//            System.out.println("FAILED");
//        }

    }//GEN-LAST:event_AddBtnMouseClicked

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItemQtyByClickingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItemQtyByClickingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItemQtyByClickingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItemQtyByClickingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddItemQtyByClickingDialog dialog = new AddItemQtyByClickingDialog(new javax.swing.JFrame(), true, "", "", "", "");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JTextField QtyValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
